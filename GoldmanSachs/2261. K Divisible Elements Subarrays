class Solution {
public:
    int countDistinct(vector<int>& nums, int k, int p) {

        int i = 0, j = 0; 
        int n = nums.size();
        int count = 0;
        set<vector<int>> distinctSubarrays; //initialize the set
        vector<int> temp;

        while (i < n) {

            if (j < n) {

               temp.push_back(nums[j]); //push current element
                if (nums[j] % p == 0) { //check for atmost k condition
                    count++;
                }

                if (count <= k) { //push to set
                    distinctSubarrays.insert(temp); 
                }

                j++;
            }

            if (count > k || j == n) { //update window
                temp.clear();
                i++;
                j = i;
                count = 0;
            }
        }

        return distinctSubarrays.size(); //finally return set size ;)
    }
};