
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        //FW algorithm
        vector<vector<int>>mat(n, vector<int>(n,INT_MAX));

        for(auto edge : edges){
            int u = edge[0];
            int v =  edge[1];
            int wt = edge[2];

            mat[u][v] = wt;
            mat[v][u] = wt;

            // mat[i][i] = 0;
        }

        for( int i = 0 ;i < n ; i++) mat[i][i] = 0 ; 
        // for(int i = 0; i<n; i++){
        //     for(int j = 0 ; j<n ;j++){
        //         if(i==j){
        //             mat[i][j] = 0;
        //         }
        //     }
        // }

         for(int vis = 0 ; vis<n ; vis++){
	      for(int i = 0; i<n ; i++){
	        for(int j = 0 ; j<n; j++){
	            
	            if(mat[i][vis] == INT_MAX || mat[vis][j] == INT_MAX) continue;
	            mat[i][j] = min(mat[i][j], mat[i][vis]+mat[vis][j]);
	            
	        }
	      }
	    }

        int mincityReach = n;
        int city = -1; // ans;

        for(int i = 0 ; i< n ; i++){
            int cnt = 0;

            for(int j = 0 ; j<n; j++){

                if(mat[i][j]<=distanceThreshold){
                    cnt++;
                }
            }

             if(cnt <mincityReach){
                mincityReach = cnt;
                city = i;
            }
            else if(cnt == mincityReach) city = i;
        }

        return city;
    }
};